@model EducationSystem.Models.Topic
@{
    ViewData["Title"] = "Details";
}
    <head>
        <link href='~/css/EducationSystem.css' rel='stylesheet' />
    </head>
    <div>
        <h4>Topic @Html.DisplayFor(model => model.Name)</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Name)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Name)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd class="col-sm-10">
                <span style="white-space:pre-line">@Html.DisplayFor(model => model.Description)</span>
            </dd>
        </dl>
        <div>
            <a class="edu-system-button btn btn-light" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
            @if (Model.Parent == null)
            {
                <a class="edu-system-button btn btn-light" asp-action="Index">Back</a>
            }
            else
            {
                <a class="edu-system-button btn btn-light" asp-action="Details" asp-route-id="@Model.Parent.Id">Back</a>
            }
        </div>
        <div class="table-header">
            <h5>Subtopics</h5>
            <a type="button" class="add-new-button btn btn-light btn-sm" asp-action="Create" asp-route-id=@Model.Id>
                <svg class="bi bi-plus" width="1.5em" height="1.5em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" d="M8 3.5a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5H4a.5.5 0 0 1 0-1h3.5V4a.5.5 0 0 1 .5-.5z" />
                    <path fill-rule="evenodd" d="M7.5 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1H8.5V12a.5.5 0 0 1-1 0V8z" />
                </svg>
            </a>
        </div>
        @{
            if (ViewBag.subtopics.Count > 0)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th></th>
                            <th>
                                @Html.DisplayNameFor(model => model.Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Description)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in ViewBag.subtopics)
                        {
                            <tr>
                                <td>
                                    @if (item.Learned == true)
                                    {
                                        <p>&#9734;</p>
                                    }
                                </td>
                                <td>
                                    @item.Name
                                </td>
                                <td>
                                    @Truncate(item.Description)
                                </td>
                                <td>
                                    <div class="table-item-buttons">
                                        <a class="edu-system-button btn btn-light" asp-action="Edit" asp-route-id="@item.Id">Edit</a><div class="vertical-line" />
                                        <a class="edu-system-button btn btn-light" asp-action="Details" asp-route-id="@item.Id">Details</a><div class="vertical-line" />
                                        <a class="edu-system-button btn btn-light" asp-action="Teams" asp-route-id="@item.Id">Teams</a><div class="vertical-line" />
                                        @using (Html.BeginForm("Learn", "Topics", FormMethod.Post))
                                        {
                                            @Html.Hidden("topicId", (int)item.Id);
                                            @Html.Hidden("learned", (bool)item.Learned);
                                            @Html.Hidden("type", "learnUnlearn");
                                            @Html.Hidden("place", "details");
                                            @if (item.Learned == false)
                                            {
                                                <input class="edu-system-button btn btn-light" type="submit" value="Mark as learned" />
                                            }
                                            else
                                            {
                                                <input class="edu-system-button btn btn-light" type="submit" value="Remove from learned" />
                                            }
                                        }<div class="vertical-line" />
                                        @using (Html.BeginForm("Learn", "Topics", FormMethod.Post))
                                        {
                                            @Html.Hidden("topicId", (int)item.Id);
                                            @Html.Hidden("learned", (bool)item.GoalsLearned);
                                            @Html.Hidden("type", "goal");
                                            @Html.Hidden("place", "details");
                                            @if (item.GoalsLearned == false)
                                            {
                                                <input class="btn btn-light" name="goal" type="submit" value="Set as goal" />
                                            }
                                            else
                                            {
                                                <input class="btn btn-light" name="goal" type="submit" value="Remove goal" />
                                            }
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        }

    </div>
<div>
</div>

@functions{
    public string Truncate(string yourString)
    {
        if (!String.IsNullOrEmpty(yourString))
        {
            return (yourString.Length <= 50) ? yourString : yourString.Substring(0, 50) + "...";
        }
        else
        {
            return "";
        }
    }

}