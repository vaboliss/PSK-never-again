@model IEnumerable<EducationSystem.Models.Topic>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    <a asp-action="Workers" asp-route-id="@item.Id">Workers</a>
                </td>
            </tr>
            <tr>
                @if (@item.SubTopics != null)
                {
                    @foreach (var item2 in @item.SubTopics)
                    {
                        <td>
                            <a asp-action="Edit" asp-route-id="@item2.Id">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item2.Id">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item2.Id">Delete</a>
                            <a asp-action="Workers" asp-route-id="@item2.Id">Workers</a>
                        </td>
                        Console.WriteLine(@item2.Parent.Name);

                    }}
            </tr>
        }
    </tbody>
</table>
