@using EducationSystem.Models
@model EducationSystem.Models.TopicCreateViewModel


@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>
@if (ViewBag.Parent != null)
{
    <h4>Create Subtopic</h4>
}
else
{
    <h4>Create Topic</h4>
}
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            @if (ViewBag.Parent != null)
            {
                <h5>This subtopic has a parent @ViewBag.Parent.Name</h5>
                @Html.HiddenFor(x => x.ParentId,new { Value = @ViewBag.Parent.Id });
            }
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control">Type description</textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
